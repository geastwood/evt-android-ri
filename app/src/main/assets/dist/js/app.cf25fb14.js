(function(e){function a(a){for(var n,l,r=a[0],s=a[1],c=a[2],w=0,g=[];w<r.length;w++)l=r[w],i[l]&&g.push(i[l][0]),i[l]=0;for(n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n]);d&&d(a);while(g.length)g.shift()();return o.push.apply(o,c||[]),t()}function t(){for(var e,a=0;a<o.length;a++){for(var t=o[a],n=!0,r=1;r<t.length;r++){var s=t[r];0!==i[s]&&(n=!1)}n&&(o.splice(a--,1),e=l(l.s=t[0]))}return e}var n={},i={app:0},o=[];function l(a){if(n[a])return n[a].exports;var t=n[a]={i:a,l:!1,exports:{}};return e[a].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,a,t){l.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:t})},l.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,a){if(1&a&&(e=l(e)),8&a)return e;if(4&a&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&a&&"string"!=typeof e)for(var n in e)l.d(t,n,function(a){return e[a]}.bind(null,n));return t},l.n=function(e){var a=e&&e.__esModule?function(){return e["default"]}:function(){return e};return l.d(a,"a",a),a},l.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},l.p="";var r=window["webpackJsonp"]=window["webpackJsonp"]||[],s=r.push.bind(r);r.push=a,r=r.slice();for(var c=0;c<r.length;c++)a(r[c]);var d=s;o.push([0,"chunk-vendors"]),t()})({0:function(e,a,t){e.exports=t("56d7")},1:function(e,a){},2:function(e,a){},3:function(e,a){},4:function(e,a){},"56d7":function(a,t,n){"use strict";n.r(t);var i=n("dbf2"),o=n.n(i);const l={versions:function(){var e=navigator.userAgent;return{trident:e.indexOf("Trident")>-1,presto:e.indexOf("Presto")>-1,webKit:e.indexOf("AppleWebKit")>-1,gecko:e.indexOf("Gecko")>-1&&-1==e.indexOf("KHTML"),mobile:!!e.match(/AppleWebKit.*Mobile.*/),ios:!!e.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/),android:e.indexOf("Android")>-1||e.indexOf("Linux")>-1,iPhone:e.indexOf("iPhone")>-1,iPad:e.indexOf("iPad")>-1,webApp:-1==e.indexOf("Safari"),weixin:"micromessenger"==e.toLowerCase().match(/MicroMessenger/i),qq:" qq"==e.match(/\sQQ/i)}}()},r=(e,a)=>{console.log(e,a),l.versions.ios&&window.webkit.messageHandlers[e].postMessage({content:a}),l.versions.android&&window.test[e](a)};var s=r;const c=e=>{return"string"!==typeof e?JSON.stringify(e):e},d=e=>{return"string"!==typeof e?e:JSON.parse(e)};window.randomPrivateKey=(async()=>{let e=c(await o.a.EvtKey.randomPrivateKey());s("randomPrivateKeyCallback",e)}),window.privateToPublic=(e=>{let a=c(o.a.EvtKey.privateToPublic(e));s("privateToPublicCallback",a)}),window.seedPrivateKey=(e=>{let a=c(o.a.EvtKey.seedPrivateKey(e));s("seedPrivateKeyCallback",a)}),window.isValidPrivateKey=(e=>{let a=c(o.a.EvtKey.isValidPrivateKey(e));s("isValidPrivateKeyCallback",a)}),window.isValidPublicKey=(e=>{let a=c(o.a.EvtKey.isValidPublicKey(e));s("isValidPublicKeyCallback",a)}),window.isValidAddress=(e=>{let a=c(o.a.EvtKey.isValidAddress(e));s("isValidAddressCallback",a)}),window.random32BytesAsHex=(async()=>{let e=c(await o.a.EvtKey.random32BytesAsHex());s("random32BytesAsHexCallback",e)}),window.randomName128=(async()=>{let e=c(await o.a.EvtKey.randomName128());s("randomName128Callback",e)}),window.getNullAddress=(()=>{let e=c(o.a.EvtKey.getNullAddress(address));s("getNullAddressCallback",e)});let w=null;window.needPrivateKeyResponse=null,window.EVTInit=(()=>{const e={host:"mainnet14.everitoken.io",port:443,protocol:"https"};w=o()({endpoint:e,keyProvider:()=>{return new Promise((e,a)=>{window.needPrivateKeyResponse=e,s("needPrivateKey","")})}})}),window.getInfo=(async()=>{let e=c(await w.getInfo());s("getInfoCallback",e)}),window.getHeadBlockHeaderState=(async()=>{let e=c(await w.getHeadBlockHeaderState());s("getHeadBlockHeaderStateCallback",e)}),window.getOwnedTokens=(async e=>{let a=c(await w.getOwnedTokens(e));s("getOwnedTokensCallback",a)}),window.getManagedGroups=(async e=>{let a=c(await w.getManagedGroups(e));s("getManagedGroupsCallback",a)}),window.getCreatedDomains=(async e=>{let a=c(await w.getCreatedDomains(e));s("getCreatedDomainsCallback",a)}),window.getCreatedFungibles=(async e=>{let a=c(await w.getCreatedFungibles(e));s("getCreatedFungiblesCallback",a)}),window.getActions=(async e=>{let a=c(await w.getActions(e));s("getActionsCallback",a)}),window.getToken=(async(e,a)=>{let t=c(await w.getToken(e,a));s("getTokenCallback",t)}),window.getFungibleBalance=(async e=>{let a=c(await w.getFungibleBalance(e));s("getFungibleBalanceCallback",a)}),window.getTransactionDetailById=(async e=>{let a=c(await w.getTransactionDetailById(e));s("getTransactionDetailByIdCallback",a)}),window.getDomainDetail=(async e=>{let a=c(await w.getDomainDetail(e));s("getDomainDetailCallback",a)}),window.getGroupDetail=(async e=>{let a=c(await w.getGroupDetail(e));s("getGroupDetailCallback",a)}),window.getFungibleActionsByAddress=(async(e,a,t,n)=>{let i=c(await w.getFungibleActionsByAddress(e,a,[0],[10]));s("getFungibleActionsByAddressCallback",i)}),window.getTransactionsDetailOfPublicKeys=(async(e,a,t)=>{let n=c(await w.getTransactionsDetailOfPublicKeys(e,[a],[10]));s("getTransactionsDetailOfPublicKeysCallback",n)}),window.getFungibleSymbolDetail=(async e=>{let a=c(await w.getFungibleSymbolDetail(e));s("getFungibleSymbolDetailCallback",a)}),window.getRequiredKeysForSuspendedTransaction=(async(e,a)=>{let t=c(await w.getRequiredKeysForSuspendedTransaction(e,a));s("getRequiredKeysForSuspendedTransactionCallback",t)}),window.getStatusOfEvtLink=(async e=>{e=d(e);let a=c(await w.getStatusOfEvtLink(e));s("getStatusOfEvtLinkCallback",a)}),window.getSuspendedTransactionDetail=(async e=>{let a=c(await w.getSuspendedTransactionDetail(e));s("getSuspendedTransactionDetailCallback",a)}),window.getEstimatedChargeForTransaction=(async(e,a,t)=>{let n;a=d(a),t=d(t),n=c(t?await w.getEstimatedChargeForTransaction(t,new o.a.EvtAction(e,a)):await w.getEstimatedChargeForTransaction(new o.a.EvtAction(e,a))),s("getEstimatedChargeForTransactionCallback",n)}),window.generateUnsignedTransaction=(async(e,a,t)=>{let n;a=d(a),t=d(t),n=c(t?await w.generateUnsignedTransaction(t,new o.a.EvtAction(e,a)):await w.generateUnsignedTransaction(new o.a.EvtAction(e,a))),s("generateUnsignedTransactionCallback",n)}),window.pushTransaction=(async(e,a,t)=>{let n;a=d(a),t=d(t),n=c(t?await w.pushTransaction(t,new o.a.EvtAction(e,a)):await w.pushTransaction(new o.a.EvtAction(e,a))),s("pushTransactionCallback",n)}),window.getUniqueLinkId=(async()=>{let e=c(await o.a.EvtLink.getUniqueLinkId());s("getUniqueLinkIdCallback",e)}),window.getEVTLinkQrImage=((a,t,n)=>{t=d(t),n=d(n);o.a.EvtLink.getEVTLinkQrImage(a,t,n,(a,t)=>{a?console.log(e.message):s("getEVTLinkQrImageCallback",c(t.dataUrl))})}),window.parseEvtLink=(async(e,a)=>{a=d(a);let t=c(await o.a.EvtLink.parseEvtLink(e,a));s("parseEvtLinkCallback",t)}),window.getEvtLinkForEveriPass=(async e=>{e=d(e);let a=c(await o.a.EvtLink.getEvtLinkForEveriPass(e));s("getEvtLinkForEveriPassCallback",a)}),window.getEvtLinkForEveriPay=(async e=>{e=d(e);let a=c(await o.a.EvtLink.getEvtLinkForEveriPay(e));s("getEvtLinkForEveriPayCallback",a)}),window.getEvtLinkForPayeeCode=(async e=>{e=d(e);let a=c(await o.a.EvtLink.getEvtLinkForPayeeCode(e));s("getEvtLinkForPayeeCodeCallback",a)});var g=n("00a5"),y=n.n(g);window.generateMnemonic=(()=>{let e=y.a.generateMnemonic(words);s("generateMnemonicCallback",e)}),window.mnemonicToSeedHex=(e=>{let a=y.a.mnemonicToSeedHex(e);s("mnemonicToSeedHexCallback",a)}),window.mnemonicToSeed=((e,a)=>{let t;t=a?y.a.mnemonicToSeed(e,a):y.a.mnemonicToSeed(e),s("mnemonicToSeedCallback",t)}),window.validateMnemonic=(e=>{let a=y.a.validateMnemonic(e);s("validateMnemonicCallback",a)}),window.entropyToMnemonic=(e=>{let a=y.a.entropyToMnemonic(e);s("entropyToMnemonicCallback",a)}),window.mnemonicToEntropy=(e=>{let a=y.a.mnemonicToEntropy(e);s("mnemonicToEntropyCallback",a)}),window.createEVTWallet=(async e=>{let a=(await o.a.EvtKey.random32BytesAsHex()).substring(32),t=y.a.entropyToMnemonic(a),n=y.a.mnemonicToSeedHex(t),i=await o.a.EvtKey.seedPrivateKey(n),l=o.a.EvtKey.privateToPublic(i),r=JSON.stringify({mnemoinc:t,privateKey:i,publicKey:l,password:e,type:"EVT"});s("createEVTWalletCallback",r)}),window.importEVTWallet=(async(e,a)=>{let t=y.a.mnemonicToSeedHex(e),n=await o.a.EvtKey.seedPrivateKey(t),i=o.a.EvtKey.privateToPublic(n),l=JSON.stringify({mnemoinc:e,privateKey:n,publicKey:i,password:a,type:"EVT"});s("importEVTWalletCallback",l)})}});
//# sourceMappingURL=app.cf25fb14.js.map